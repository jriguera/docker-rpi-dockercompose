#!/usr/bin/env bash
#
# Run docker-compose in a container
#
set -e

# Main executable
DOCKER=${DOCKER:-/usr/bin/docker}
DOCKER_HOST="${DOCKER_HOST:-/var/run/docker.sock}"

# Folder with the compose file and variables files
STACKDIR="${STACKDIR:-/etc/docker-compose}"
# Name of the docker-compose project (by default is the name of the folder)
NAME="${NAME:-system}"
# Disable the service
ENABLED="${ENABLED:-1}"
# Image to run
IMAGE="${IMAGE:-jriguera/dockercompose}"
# Extra docker options
OPTIONS="${OPTIONS:-}"
# Vars to pass to docker-compose
ENVVARS="DOCKER_CERT_PATH DOCKER_TLS_VERIFY DOCKER_CLIENT_TIMEOUT COMPOSE_HTTP_TIMEOUT COMPOSE_PROJECT_NAME COMPOSE_FILE COMPOSE_API_VERSION"
# Extra volumes
VOLUMES="${VOLUMES:-"-v /root:/root"}"
# Configuration file
CONFIGFILE="${CONFIGFILE:-config.env}"

###

HELP=0
while getopts "hs:c:" o
do
    case "${o}" in
    h)
        HELP=1
        echo "Usage:  $0 [-h] [-s <stackdir>] [list-docker-compose-args]"
        echo "  Docker wrapper to docker-compose to manage 'system' stack in <stackdir> folder"
        echo "  Default <stackdir> folder: ${STACKDIR}"
        echo "  Settings in <stackdir> (${STACKDIR}): ${CONFIGFILE}"
        echo "  Default docker-compose image: ${IMAGE}"
        echo
        echo "docker-compose usage:"
        STACKDIR=$(pwd)
        ;;
    s)
        STACKDIR=$(realpath "${OPTARG}")
        if ! [ -d "${STACKDIR}" ]
        then
            echo "Error, stack folder does not exists"
            exit 1
        fi
        ;;
    s)
        CONFIGFILE="${OPTARG}"
        ;;
    *)
        break
        ;;
    esac
done
shift $((OPTIND-1))

if [ $(id -u) -ne 0 ]
then
   echo "Error, please run as root!"
   exit 1
fi

if [ -r "${STACKDIR}/${CONFIGFILE}" ]
then
    echo "Loading ${STACKDIR}/${CONFIGFILE} ..."
    source "${STACKDIR}/${CONFIGFILE}"
fi

if [ "${ENABLED}" != "1" ]
then
    echo "Exit 0, not enabled. See ${STACKDIR}/config.env"
    exit 0
fi

if [ -S "${DOCKER_HOST}" ]; then
    ADDR="-v ${DOCKER_HOST}:${DOCKER_HOST} -e DOCKER_HOST"
else
    ADDR="-e DOCKER_HOST"
fi

# Setup volume mounts for compose config and context
WORKDIR=/data/$(basename "${STACKDIR}")
VOLUMES="${VOLUMES} -v ${STACKDIR}:${WORKDIR}"
VOLUMES="${VOLUMES} -v /root:/root"

# Env vars
for var in ${ENVVARS}
do
    [ -z "${var}" ] || OPTIONS="--env ${var} ${OPTIONS}"
done

# Handle userns security
[ ! -z "$(${DOCKER} info 2>/dev/null | grep userns)" ] && OPTIONS="${OPTIONS} --userns=host"
[ "${HELP}" == "1" ] && set -- --help "$@"
[ -n "${NAME}" ] && set -- -p "${NAME}" "$@"

exec ${DOCKER} run --rm ${OPTIONS} ${ADDR} ${VOLUMES} -w "${WORKDIR}" "${IMAGE}" "$@"

